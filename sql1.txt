Hint: So that you can understand the schema, you may want to just do a simple select statement on each
table.  For example, to see the schema for the Products table, you could do:

SELECT * FROM Products LIMIT 5;

1. Use an SQL SELECT statement to retrieve the first 10 rows of the Customer table, ordered by CustomerName.
Paste your SQL statement below:

SELECT * FROM Customer
ORDER BY CustomerName
LIMIT 10;

2. Use an SQL Select statement to retrieve the names and prices for all products that cost less than $20.
Paste your SQL statement below:

SELECT ProductName, Price
FROM Products
WHERE Price < 20;


3. Retrieve all employees whose last name starts with C.  Paste your SQL statement below:

SELECT ProductName, Price
FROM Products
WHERE Price < 20;


4. Retrieve the order ID and customer name for all orders where the customer name starts with A.
Here you will have to do a join of the Orders table and the Customers table.  Paste your SQL
statement below.

[["OrderID", "CustomerName"],
 [10308, "Ana Trujillo Emparedados y helados "],
 [10355, "Around the Horn "],
 [10365, "Antonio Moreno Taquería "],
 [10383, "Around the Horn "]]


5. Retrieve the list of customers, ordered by customer name, along with their order IDs.  Note
that not every customer has an order, but be sure that you include those customers without orders
in the results of the query.  Paste your SQL statement below.

[["CustomerName", "OrderID"],
 ["Alfreds Futterkiste ", "No orders"],
 ["Ana Trujillo Emparedados y helados ", 10308],
 ["Antonio Moreno Taquería ", 10365],
 ["Around the Horn ", 10355],
 ["Around the Horn ", 10383],
 ["B's Beverages ", 10289],
 ["Berglunds snabbköp ", 10278],
 ["Berglunds snabbköp ", 10280],
 ["Berglunds snabbköp ", 10384],
 ["Blauer See Delikatessen ", "No orders"],
 ["Blondel père et fils ", 10265],
 ["Blondel père et fils ", 10297],
 ["Blondel père et fils ", 10360],
 ["Blondel père et fils ", 10436],
 ["Bon app' ", 10331],
 ["Bon app' ", 10340],
 ["Bon app' ", 10362],
 ["Bottom-Dollar Marketse ", 10389],
 ["Bottom-Dollar Marketse ", 10410],
 ["Bottom-Dollar Marketse ", 10411],
 ["Bottom-Dollar Marketse ", 10431],
 ["Bólido Comidas preparadas ", 10326],
 ["Cactus Comidas para llevar ", "No orders"],
 ["Centro comercial Moctezuma ", 10259],
 ["Chop-suey Chinese ", 10254],
 ["Chop-suey Chinese ", 10370],
 ["Comércio Mineiro ", 10290],
 ["Consolidated Holdings ", 10435],
 ["Die Wandernde Kuh ", 10301],
 ["Die Wandernde Kuh ", 10312],
 ["Die Wandernde Kuh ", 10348],
 ["Die Wandernde Kuh ", 10356],
 ["Drachenblut Delikatessend ", 10363],
 ["Drachenblut Delikatessend ", 10391],
 ["Du monde entier ", 10311],
 ["Eastern Connection ", 10364],
 ["Eastern Connection ", 10400],
 ["Ernst Handel ", 10258],
 ["Ernst Handel ", 10263],
 ["Ernst Handel ", 10351],
 ["Ernst Handel ", 10368],
 ["Ernst Handel ", 10382],
 ["Ernst Handel ", 10390],
 ["Ernst Handel ", 10402],
 ["Ernst Handel ", 10403],
 ["Ernst Handel ", 10430],
 ["Ernst Handel ", 10442],
 ["FISSA Fabrica Inter. Salchichas S.A. ", "No orders"],
 ["Familia Arquibaldo ", 10347],
 ["Familia Arquibaldo ", 10386],
 ["Familia Arquibaldo ", 10414],
 ["Folies gourmandes ", 10408],
 ["Folk och fä HB ", 10264],
 ["Folk och fä HB ", 10327],
 ["Folk och fä HB ", 10378],
 ["Folk och fä HB ", 10434],
 ["France restauration ", "No orders"],
 ["Franchi S.p.A. ", 10422],
 ["Frankenversand ", 10267],
 ["Frankenversand ", 10337],
 ["Frankenversand ", 10342],
 ["Frankenversand ", 10396],
 ["Furia Bacalhau e Frutos do Mar ", 10328],
 ["Furia Bacalhau e Frutos do Mar ", 10352],
 ["GROSELLA-Restaurante ", 10268],
 ["Galería del gastrónomo ", 10366],
 ["Galería del gastrónomo ", 10426],
 ["Godos Cocina Típica ", 10303],
 ["Gourmet Lanchonetes ", 10423],
 ["Great Lakes Food Market ", "No orders"],
 ["HILARIÓN-Abastos ", 10257],
 ["HILARIÓN-Abastos ", 10395],
 ["Hanari Carnes ", 10250],
 ["Hanari Carnes ", 10253],
 ["Hungry Coyote Import Store ", 10375],
 ["Hungry Coyote Import Store ", 10394],
 ["Hungry Coyote Import Store ", 10415],
 ["Hungry Owl All-Night Grocers ", 10298],
 ["Hungry Owl All-Night Grocers ", 10309],
 ["Hungry Owl All-Night Grocers ", 10335],
 ["Hungry Owl All-Night Grocers ", 10373],
 ["Hungry Owl All-Night Grocers ", 10380],
 ["Hungry Owl All-Night Grocers ", 10429],
 ["Island Trading ", 10315],
 ["Island Trading ", 10318],
 ["Island Trading ", 10321],
 ["Königlich Essen ", 10323],
 ["Königlich Essen ", 10325],
 ["LILA-Supermercado ", 10283],
 ["LILA-Supermercado ", 10296],
 ["LILA-Supermercado ", 10330],
 ["LILA-Supermercado ", 10357],
 ["LILA-Supermercado ", 10381],
 ["LINO-Delicateses ", 10405],
 ["La corne d'abondance ", "No orders"],
 ["La maison d'Asie ", 10350],
 ["La maison d'Asie ", 10358],
 ["La maison d'Asie ", 10371],
 ["La maison d'Asie ", 10413],
 ["La maison d'Asie ", 10425],
 ["Laughing Bacchus Wine Cellars ", "No orders"],
 ["Lazy K Kountry Store ", "No orders"],
 ["Lehmanns Marktstand ", 10279],
 ["Lehmanns Marktstand ", 10284],
 ["Lehmanns Marktstand ", 10343],
 ["Let's Stop N Shop ", "No orders"],
 ["Lonesome Pine Restaurant ", 10307],
 ["Lonesome Pine Restaurant ", 10317],
 ["Magazzini Alimentari Riuniti ", 10275],
 ["Magazzini Alimentari Riuniti ", 10300],
 ["Magazzini Alimentari Riuniti ", 10404],
 ["Maison Dewey ", "No orders"],
 ["Morgenstern Gesundkost ", 10277],
 ["Mère Paillarde ", 10332],
 ["Mère Paillarde ", 10339],
 ["Mère Paillarde ", 10376],
 ["Mère Paillarde ", 10424],
 ["Mère Paillarde ", 10439],
 ["North/South ", "No orders"],
 ["Océano Atlántico Ltda. ", 10409],
 ["Old World Delicatessen ", 10260],
 ["Old World Delicatessen ", 10305],
 ["Old World Delicatessen ", 10338],
 ["Old World Delicatessen ", 10441],
 ["Ottilies Käseladen ", 10407],
 ["Paris spécialités ", "No orders"],
 ["Pericles Comidas clásicas ", 10322],
 ["Pericles Comidas clásicas ", 10354],
 ["Piccolo und mehr ", 10353],
 ["Piccolo und mehr ", 10392],
 ["Piccolo und mehr ", 10427],
 ["Princesa Isabel Vinhoss ", 10336],
 ["Princesa Isabel Vinhoss ", 10397],
 ["Princesa Isabel Vinhoss ", 10433],
 ["QUICK-Stop ", 10273],
 ["QUICK-Stop ", 10285],
 ["QUICK-Stop ", 10286],
 ["QUICK-Stop ", 10313],
 ["QUICK-Stop ", 10345],
 ["QUICK-Stop ", 10361],
 ["QUICK-Stop ", 10418],
 ["Que Delícia ", 10261],
 ["Que Delícia ", 10291],
 ["Que Delícia ", 10379],
 ["Que Delícia ", 10421],
 ["Queen Cozinha ", 10372],
 ["Queen Cozinha ", 10406],
 ["Rancho grande ", "No orders"],
 ["Rattlesnake Canyon Grocery ", 10262],
 ["Rattlesnake Canyon Grocery ", 10272],
 ["Rattlesnake Canyon Grocery ", 10294],
 ["Rattlesnake Canyon Grocery ", 10314],
 ["Rattlesnake Canyon Grocery ", 10316],
 ["Rattlesnake Canyon Grocery ", 10346],
 ["Rattlesnake Canyon Grocery ", 10401],
 ["Reggiani Caseifici ", 10288],
 ["Reggiani Caseifici ", 10428],
 ["Reggiani Caseifici ", 10443],
 ["Ricardo Adocicados ", 10287],
 ["Ricardo Adocicados ", 10299],
 ["Richter Supermarkt ", 10255],
 ["Richter Supermarkt ", 10419],
 ["Romero y tomillo ", 10281],
 ["Romero y tomillo ", 10282],
 ["Romero y tomillo ", 10306],
 ["Santé Gourmet ", 10387],
 ["Save-a-lot Markets ", 10324],
 ["Save-a-lot Markets ", 10393],
 ["Save-a-lot Markets ", 10398],
 ["Save-a-lot Markets ", 10440],
 ["Seven Seas Imports ", 10359],
 ["Seven Seas Imports ", 10377],
 ["Seven Seas Imports ", 10388],
 ["Simons bistro ", 10341],
 ["Simons bistro ", 10417],
 ["Split Rail Beer & Ale ", 10271],
 ["Split Rail Beer & Ale ", 10329],
 ["Split Rail Beer & Ale ", 10349],
 ["Split Rail Beer & Ale ", 10369],
 ["Split Rail Beer & Ale ", 10385],
 ["Split Rail Beer & Ale ", 10432],
 ["Spécialités du monde ", "No orders"],
 ["Suprêmes délices ", 10252],
 ["Suprêmes délices ", 10302],
 ["The Big Cheese ", 10310],
 ["The Cracker Box ", "No orders"],
 ["Toms Spezialitäten ", 10438],
 ["Tortuga Restaurante ", 10276],
 ["Tortuga Restaurante ", 10293],
 ["Tortuga Restaurante ", 10304],
 ["Tortuga Restaurante ", 10319],
 ["Tradição Hipermercados ", 10249],
 ["Tradição Hipermercados ", 10292],
 ["Trail's Head Gourmet Provisioners ", "No orders"],
 ["Vaffeljernet ", 10367],
 ["Vaffeljernet ", 10399],
 ["Victuailles en stock ", 10251],
 ["Victuailles en stock ", 10334],
 ["Vins et alcools Chevalier ", 10274],
 ["Vins et alcools Chevalier ", 10295],
 ["Wartian Herkku ", 10266],
 ["Wartian Herkku ", 10270],
 ["Wartian Herkku ", 10320],
 ["Wartian Herkku ", 10333],
 ["Wartian Herkku ", 10412],
 ["Wartian Herkku ", 10416],
 ["Wartian Herkku ", 10437],
 ["Wellington Importadora ", 10256],
 ["Wellington Importadora ", 10420],
 ["White Clover Markets ", 10269],
 ["White Clover Markets ", 10344],
 ["Wilman Kala ", 10248],
 ["Wolski ", 10374]]


6. Retrieve the list of customer names for customers that have no orders.  There are two ways to do this
One is to use a subquery, as follows:

SELECT CustomerName FROM Customers WHERE CustomerID NOT IN (SELECT CustomerID FROM ORDERS);

This is a subquery -- we haven't talked about those.  But, you can do the same thing with a left
join by comparing the OrderID column with NULL.  Paste your SQL statement below.

[["CustomerName"],
 ["Alfreds Futterkiste "],
 ["Blauer See Delikatessen "],
 ["Cactus Comidas para llevar "],
 ["FISSA Fabrica Inter. Salchichas S.A. "],
 ["France restauration "],
 ["Great Lakes Food Market "],
 ["La corne d'abondance "],
 ["Laughing Bacchus Wine Cellars "],
 ["Lazy K Kountry Store "],
 ["Let's Stop N Shop "],
 ["Maison Dewey "],
 ["North/South "],
 ["Paris spécialités "],
 ["Rancho grande "],
 ["Spécialités du monde "],
 ["The Cracker Box "],
 ["Trail's Head Gourmet Provisioners "]]

7. Retrieve the OrderID and ProductName of every order for a product with Tofu in the name.
Paste your SQL statement below.  You will have to join Orders, OrderDetails, and Products.

[["OrderID", "ProductName"],
 [10249, "Tofu "],
 [10254, "Longlife Tofu "],
 [10263, "Longlife Tofu "],
 [10325, "Tofu "],
 [10333, "Tofu "],
 [10370, "Longlife Tofu "],
 [10375, "Tofu "],
 [10381, "Longlife Tofu "],
 [10382, "Longlife Tofu "],
 [10393, "Tofu "],
 [10409, "Tofu "],
 [10412, "Tofu "],
 [10418, "Longlife Tofu "],
 [10427, "Tofu "],
 [10439, "Longlife Tofu "]]


