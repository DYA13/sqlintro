Hint: So that you can understand the schema, you may want to just do a simple select statement on each
table.  For example, to see the schema for the Products table, you could do:

SELECT * FROM Products LIMIT 5;

1. Use an SQL SELECT statement to retrieve the first 10 rows of the Customer table, ordered by CustomerName.
Paste your SQL statement below:

[["CustomerID",
  "CustomerName",
  "ContactName",
  "Address",
  "City",
  "PostalCode",
  "Country"],
 [1,
  "Alfreds Futterkiste ",
  "Maria Anders ",
  "Obere Str. 57 ",
  "Berlin ",
  "12209",
  "Germany "],
 [2,
  "Ana Trujillo Emparedados y helados ",
  "Ana Trujillo ",
  "Avda. de la Constitución 2222 ",
  "México D.F. ",
  "2577",
  "Mexico "],
 [3,
  "Antonio Moreno Taquería ",
  "Antonio Moreno ",
  "Mataderos 2312 ",
  "México D.F. ",
  "2579",
  "Mexico "],
 [4,
  "Around the Horn ",
  "Thomas Hardy ",
  "120 Hanover Sq. ",
  "London ",
  "WA1 1DP ",
  "UK "],
 [11,
  "B's Beverages ",
  "Victoria Ashworth ",
  "Fauntleroy Circus ",
  "London ",
  "EC2 5NT ",
  "UK "],
 [5,
  "Berglunds snabbköp ",
  "Christina Berglund ",
  "Berguvsvägen 8 ",
  "Luleå ",
  "S-958 22 ",
  "Sweden "],
 [6,
  "Blauer See Delikatessen ",
  "Hanna Moos ",
  "Forsterstr. 57 ",
  "Mannheim ",
  "68306",
  "Germany "],
 [7,
  "Blondel père et fils ",
  "Frédérique Citeaux ",
  "24, place Kléber ",
  "Strasbourg ",
  "67000",
  "France "],
 [9,
  "Bon app' ",
  "Laurence Lebihans ",
  "12, rue des Bouchers ",
  "Marseille ",
  "13008",
  "France "],
 [10,
  "Bottom-Dollar Marketse ",
  "Elizabeth Lincoln ",
  "23 Tsawassen Blvd. ",
  "Tsawassen ",
  "T2F 8M4 ",
  "Canada "]]

2. Use an SQL Select statement to retrieve the names and prices for all products that cost less than $20.
Paste your SQL statement below:


3. Retrieve all employees whose last name starts with C.  Paste your SQL statement below:


4. Retrieve the order ID and customer name for all orders where the customer name starts with A.
Here you will have to do a join of the Orders table and the Customers table.  Paste your SQL
statement below.


5. Retrieve the list of customers, ordered by customer name, along with their order IDs.  Note
that not every customer has an order, but be sure that you include those customers without orders
in the results of the query.  Paste your SQL statement below.



6. Retrieve the list of customer names for customers that have no orders.  There are two ways to do this
One is to use a subquery, as follows:

SELECT CustomerName FROM Customers WHERE CustomerID NOT IN (SELECT CustomerID FROM ORDERS);

This is a subquery -- we haven't talked about those.  But, you can do the same thing with a left
join by comparing the OrderID column with NULL.  Paste your SQL statement below.



7. Retrieve the OrderID and ProductName of every order for a product with Tofu in the name.
Paste your SQL statement below.  You will have to join Orders, OrderDetails, and Products.




